# configuration to run l1-regularized logistic regression on the ctr dataset
app_name: "ctr"
parameter_name: "ctr_w"
linear_method {
training_data {
format: TEXT
text: ADFEA
file: "../../data/ctrb/part-.*"
# file: "/home/muli/data/ctrc/train/part-0[0-6].*"
# file: "/home/muli/data/ctrc/train/part-.*"
# format: PROTO
# file: "../../data/ctrb/train/part.*"
}

# validation_data {
# format: TEXT
# text: ADFEA
# file: "../../data/ctrc/test/part-000[0-7].*"
# }

# each worker dumps its processed data into local disk (or hdfs). it will
# accelerate the data loading if training on the same data again. but remember
# to delete all caches if (1) # of workers is changed; (2) data are changed.
local_cache {
format: BIN
file: "/tmp/mpitestdata/"
}

model_output {
format: TEXT
file: "../output/ctr"
}

loss {
type: LOGIT
}

# lambda * \| w \|_1
penalty {
type: L1
lambda: 5
}

learning_rate {
type: CONSTANT
eta: 1
}

solver {
# block-coordinate updating. we divide a feature group into feature_block_ratio
# x nnz_feature_per_instance blocks. if = 0, then use all features
feature_block_ratio : 4
# max # of iterations
max_pass_of_data : 20
# bounded-delay consistency
max_block_delay: 8
# convergance critiria. stop if the relative objective <= epsilon
epsilon : 2e-5
# important feature groups, update them eailer
prior_fea_group: 127            # the bias feature (all one)
prior_fea_group: 120            # the position rank feature
# features which occurs <= *tail_feature_count* will be filtered before training
tail_feature_freq: 10
countmin_n_ratio: .66
#
max_num_parallel_groups_in_preprocessing: 10
# turn it off only when debuging
random_feature_block_order : true
}

# darling is a block coordinate descent algorithm optimized by l1 logistic regression
darling {
# Parameters used by the trust region method. The change of w_i (the i-th
# parameter) is bouned by [-delta_i, delta_i], where delta_i is an adaptive
# value according to the convergence. The initial value of delta_i is
# *delta_init_value* and maximal value is *delta_max_value*. You can increase
# these parameters for easy datasets.
delta_init_value : 1
delta_max_value : 5
# This parameter controls the aggressiveness of the KKT filter.  Increasing this
# number will decrease the effect of KKT filter. a very large number, such as
# 1e20 will turn off the KKT filter.
kkt_filter_threshold_ratio : 10
}
}
