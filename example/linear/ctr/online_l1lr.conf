training_data {
format: TEXT
text: SPARSE_BINARY
file: "data/ctr/train/part.*"
}

model_output {
format: TEXT
file: "model/ctr_online"
}

loss { type: LOGIT }

# lambda_0 * |w|_1 + lambda_1 * |w|^2_2
penalty {
type: L1
lambda: 10
lambda: 1
}

# lr = alpha: .1
learning_rate {
type: DECAY
alpha: .01
beta: 10
}

# see more config options in linear.proto
async_sgd {
algo: FTRL
# The size of minibatch
minibatch: 10000
# The number of data passes
num_data_pass: 10

push_filter {
type: KEY_CACHING
clear_cache_if_done: true
}

push_filter {
type: FIXING_FLOAT
num_bytes: 1
}

pull_filter {
type: KEY_CACHING
}

pull_filter {
type: FIXING_FLOAT
num_bytes: 1
}
}
