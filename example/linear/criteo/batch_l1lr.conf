training_data {
format: TEXT
text: CRITEO
file: "data/criteo/train/part.*"

# If the data is placed on hdfs and HADOOP_HOME="/usr"
# hdfs {
# home: "/usr"
# }
}

model_output {
format: TEXT
file: "model/criteo_batch"
}

loss {
type: LOGIT
}

# lambda * \| w \|_1
penalty {
type: L1
lambda: 4
lambda: 1
}

learning_rate {
type: CONSTANT
alpha: .9
}

darlin {
# the max number of data passes
max_pass_of_data : 50
# convergance critiria. stop if the relative objective <= epsilon
epsilon : 2e-5

save_model_every_n_iter: 20

# The maximal number of blocks can be updating in parallel (bounded-delay
# consistency). A larger delay may slow down the convergence rate, but improves
# the system performance.
max_block_delay: 2

# features which occurs <= *tail_feature_freq* will be filtered before
# training. it save both memory and bandwidth.
tail_feature_freq: 4

# It controls the countmin size. We filter the tail features by countmin, which
# is more efficient than hash, but still is the memory bottleneck for servers. A
# smaller ratio reduces the memory footprint, but may increase the size of
# filtered feature.

countmin_n_ratio: .66

# During preprocessing, each (text) file is parsed and then write into the local
# cache in binary format to save the memory. These data are then used by the
# preprocessing stage, and also can be re-used when running next time.
local_cache {
format: BIN
file: "data/cache/criteo_train_"
}

comm_filter {
type: KEY_CACHING
}

# load_local_data: true

# Parameters used by the trust region method. The change of w_i (the i-th
# parameter) is bouned by [-delta_i, delta_i], where delta_i is an adaptive
# value according to the convergence. The initial value of delta_i is
# *delta_init_value* and maximal value is *delta_max_value*. You can increase
# these parameters for easy datasets.

# [PS.LM.delta_init_value] : 1
# [PS.LM.delta_max_value] : 5

# This parameter controls the aggressiveness of the KKT filter.  Increasing this
# number will decrease the effect of KKT filter. a very large number, such as
# 1e20 will turn off the KKT filter.

# [PS.LM.kkt_filter_threshold_ratio] : 10
}
